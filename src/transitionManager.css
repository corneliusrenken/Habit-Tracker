:root {
  --min-margin-height: 10vh;
}

/* ========================== */
/* static states */
/* ========================== */

.container {
  position: relative;
  overflow: hidden;
}

.occurrences {
  transition: bottom 750ms;
  z-index: 2;
  /* height: ${({ occurrencesLength }) => `${occurrencesLength * 50}px`}; */
  height: var(--occurrences-height);
  width: 350px;
  left: calc(50vw - 350px / 2);
  background-color: aquamarine;
  background-image: linear-gradient(120deg, #fccb90 0%, #d57eeb 100%);
}

.days {
  transition: bottom 750ms, opacity 750ms;
  z-index: 2;
  height: 50px;
  width: 350px;
  left: calc(50vw - 350px / 2);
  background-color: violet;
}

.dates {
  transition: bottom 750ms;
  z-index: 2;
  height: 50px;
  width: 350px;
  left: calc(50vw - 350px / 2);
  background-color: orangered;
}

.list {
  transition: top 750ms, opacity 750ms;
  z-index: 0;
  height: var(--list-height);
  width: 350px;
  left: calc(50vw - 350px / 2);
  background-color: greenyellow;
  background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
}

.mask {
  z-index: 1;
  left: 0;
  right: 0;
  background-color: white;
}

.mask-top {
  transition: bottom 750ms;
  top: 0;
}

.mask-bottom {
  transition: top 750ms;
  bottom: 0;
}

/* ========================== */
/* view states */
/* ========================== */

/* list */

.container-list-view {
  height: max(
    100vh,
    100vh + var(--list-height) + 100px - (100vh - 2 * var(--new-margin))
  );
}

.occurrences-list-view {
  position: fixed;
  bottom: calc(100vh - var(--new-margin) - 50px);
}

.days-list-view {
  position: fixed;
  opacity: 1;
  bottom: calc(100vh - var(--new-margin) - 50px);
}

.dates-list-view {
  position: fixed;
  bottom: calc(100vh - var(--new-margin) - 100px);
}

.list-list-view {
  position: absolute;
  opacity: 1;
  top: calc(var(--new-margin) + 100px);
}

.mask-top-list-view {
  position: fixed;
  bottom: calc(100vh - var(--new-margin) - 100px);
}

.mask-bottom-list-view {
  position: fixed;
  top: calc(100vh - var(--new-margin));
}

/* occurrence */

.container-occurrence-view {
  height: max(
    100vh,
    var(--new-margin) * 2 + var(--occurrences-height) + 50px
  );
}

.occurrences-occurrence-view {
  position: absolute;
  bottom: calc(var(--new-margin) + 50px);
}

.days-occurrence-view {
  position: absolute;
  opacity: 0;
  bottom: calc(var(--new-margin) + 50px);
}

.dates-occurrence-view {
  position: absolute;
  bottom: var(--new-margin);
}

.list-occurrence-view {
  position: absolute;
  opacity: 0;
  top: calc(100% - var(--new-margin) - var(--scroll-offset));
}

.mask-top-occurrence-view {
  position: absolute;
  bottom: var(--new-margin);
}

.mask-bottom-occurrence-view {
  position: absolute;
  top: calc(100% - var(--new-margin) + 100vh - 100px - 2 * var(--old-margin));
}

/* ========================================== */
/* transition starting points / reflow styles */
/* https://stackoverflow.com/questions/11131875/what-is-the-cleanest-way-to-disable-css-transition-effects-temporarily */
/* ========================================== */

/* Note: these need to be below the other classes to take precedense */

/* list to occurrence */

.occurrences-list-to-occurrence-start-point {
  bottom: calc(100vh - var(--old-margin) - 50px);
}

.days-list-to-occurrence-start-point {
  bottom: calc(100vh - var(--old-margin) - 50px);
}

.dates-list-to-occurrence-start-point {
  bottom: calc(100vh - var(--old-margin) - 100px);
}

.list-list-to-occurrence-start-point {
  top: calc(100% - var(--old-margin) - (100vh - 2 * var(--old-margin) - 100px) - var(--scroll-offset));
}

.mask-top-list-to-occurrence-start-point {
  bottom: calc(100vh - var(--old-margin) - 100px);
}

.mask-bottom-list-to-occurrence-start-point {
  top: calc(100% - var(--old-margin));
}

/* occurrence to list */


.occurrences-occurrence-to-list-start-point {
  bottom: calc(var(--old-margin) + 50px - var(--scroll-offset));
}

.days-occurrence-to-list-start-point {
  bottom: calc(var(--old-margin) + 50px  - var(--scroll-offset));
}

.dates-occurrence-to-list-start-point {
  bottom: calc(var(--old-margin)  - var(--scroll-offset));
}

.list-occurrence-to-list-start-point {
  top: calc(100vh - var(--old-margin) + var(--scroll-offset));
}

.mask-top-occurrence-to-list-start-point {
  bottom: calc(var(--old-margin) - var(--scroll-offset));
}

.mask-bottom-occurrence-to-list-start-point {
  top: calc(100vh - var(--old-margin) + (100vh - 100px - 2 * var(--new-margin)) + var(--scroll-offset));
}