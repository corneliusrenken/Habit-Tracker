@use 'variables';
@use 'theme';

body {
  --layout-vertical-margin: 20vh;
}

$transition-distance: calc((50vh - 25px) - 50px - var(--layout-vertical-margin));

.layout {
  position: relative;
  contain: paint; // instead of overflow hidden, allows sticky child

  min-height: 100vh;

  &.list {
    height: calc(100px + var(--list-height) + 2 * var(--layout-vertical-margin));
  }

  &.occurrence {
    height: calc(var(--occurrence-height) + 25px + 50vh);
  }

  &.frozen {
    height: 100vh;
  }

  &-freeze {
    position: relative;

    .frozen & {
      top: calc(-1 * var(--freeze-scroll-distance));
    }
  }

  &-scroll {
    position: relative;

    width: 350px;
    left: calc(50vw - 175px);

    .list & {
      top: calc(var(--layout-vertical-margin) - var(--occurrence-height) + 50px);

      @keyframes to-list {
        0% {
          top: calc(
            var(--layout-vertical-margin)
            - var(--occurrence-height)
            + 50px
            + $transition-distance
            + var(--transition-scroll-distance)
          );
        }
        100% {
          top: calc(var(--layout-vertical-margin) - var(--occurrence-height) + 50px);
        }
      }

      animation-name: to-list;
    }

    .occurrence & {
      top: 0px;

      @keyframes to-occurrence {
        0% {
          top: calc(-1 * $transition-distance - var(--transition-scroll-distance));
        }
        100% {
          top: 0px;
        }
      }

      animation-name: to-occurrence;
    }

    animation-duration: 0.6s;

    .first-render & {
      animation-duration: 0s;
    }

    animation-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1.0);
  }

  &-occurrences {
    min-height: calc(50vh - 25px);
    height: var(--occurrence-height);
    position: sticky;
    top: calc(var(--layout-vertical-margin) - var(--occurrence-height) + 50px);
  }

  // &-days {

  // }

  &-dates {
    height: 50px;
    position: sticky;
    top: calc(var(--layout-vertical-margin) + 50px);
  }

  &-list {
    height: var(--list-height);
  }
}

