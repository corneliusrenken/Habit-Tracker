@use 'utils';
@use 'fonts';
@use 'theme';
@use 'variables';

$selector-padding: variables.$spacing-m;
$list-content-padding: variables.$spacing-l;
$icon-button-width: variables.$block-size-xl;
$input-line-height: variables.$block-size-m;
$selector-height: variables.$block-size-l;

@mixin launch-animation {
  opacity: 0;
  animation-name: launch-animation;
  animation-delay: var(--launch-animation-offset);
  animation-duration: calc(variables.$launch-animation-time - var(--launch-animation-offset) * 1.1);
  animation-timing-function: cubic-bezier(.47,.14,.58,.79);
  animation-fill-mode: forwards;
}

@mixin create-form-transition-override {
  &:last-of-type {
    transition: none;

    &.transition-top {
      transition: top 100ms ease-out;
    }
  }
}

.list {
  position: relative;
  transition: opacity 600ms;

  .list-item {
    @include fonts.main;
    color: theme.$primary;

    z-index: 0;

    height: variables.$block-size-xl;
    width: variables.$block-size-xl * 7;

    display: flex;
    align-items: center;
    gap: variables.$spacing-s;

    @include utils.check-nested-parent-state('.list', '.selection-view') {
      position: absolute;
      transition:
        top 100ms ease-out,
        left 100ms ease-out,
        color 100ms ease-out,
        width 400ms;

      @include create-form-transition-override;
    }

    @include utils.check-nested-parent-state('.list', '.being-reordered') {
      transition:
        top 100ms ease-out,
        left 100ms ease-out,
        color 100ms ease-out,
        width 400ms,
        z-index 200ms step-end;

      &:not(.reordered-item) {
        color: theme.$secondary;
      }

      @include create-form-transition-override;
    }

    &.selected {
      z-index: 1; // when reordering with shortcut, selected item is on top of others
    }

    &.reordered-item { // reordered by dragging
      z-index: 3;
      transition: none;
    }

    .launch-animation & {
      @include launch-animation;
    }

    &.complete {
      color: theme.$secondary;
    }

    &.being-renamed {
      width: calc(variables.$block-size-xl * 7 + 3 * $icon-button-width);
    }

    .name, .error, .rename-form, .create-form, .placeholder, .streak {
      position: relative; // needs explicit position value to render over ::before element
      line-height: $selector-height; // needed to center text properly
    }

    .rename-form, .create-form {
      line-height: $input-line-height; // slightly smaller looks better when highlighting
      height: variables.$block-size-xl; // form height important for scrolling into view when being typed into
      display: flex;
      align-items: center;
    }

    .name, .error, .rename-form, .create-form, .placeholder {
      white-space: nowrap;
      overflow: hidden;
      flex-grow: 1;
      text-overflow: ellipsis;
    }

    .name, .error, .rename-form, .create-form, .placeholder {
      margin-left: $list-content-padding;
    }

    .create-form, .placeholder, .streak {
      margin-right: $list-content-padding;
    }

    .placeholder { // different than ::placeholder element, used in create habit form
      color: theme.$secondary;
    }

    .input {
      width: 100%;
      padding: calc(($selector-height - $input-line-height) / 2) 0; // padding so that clicking on the selector clicks on input

      &::placeholder {
        color: theme.$secondary;
      }
    }

    .error {
      color: theme.$error;
    }

    &.selected:before { // list item selector
      content: '';
      position: absolute;
      height: $selector-height;
      left: calc($list-content-padding - $selector-padding);
      width: calc(variables.$block-size-xl * 7 - 2 * $list-content-padding + 2 * $selector-padding);
      border-radius: variables.$border-radius-s;
      background-color: theme.$background-selected;
    }

    .launch-animation &.selected:before {
      display: none;
    }

    // &:has(.list-item-error):before {
    //   background-color: theme.$background-error;
    // }

    .icon-button-container {
      min-width: fit-content;
    }

    .icon-button {
      position: relative; // needs explicit position value to render over ::before element
      height: $selector-height;
      min-width: $icon-button-width;

      display: inline-flex;
      justify-content: center;
      align-items: center;

      &.greyed-out {
        color: theme.$secondary;
      }

      @include utils.check-nested-parent-state('.list', '.being-reordered') {
        &.move-icon {
          color: theme.$secondary;
        }
      }

      &.hidden {
        display: none;
      }

      @include utils.check-nested-parent-state('.list-item', '.selected') {
        transition: opacity 300ms;

        @for $index from 0 through 3 {
          &:nth-of-type(#{1 + $index}) {
            transition-delay: $index * 75ms;
          }
        }
      }

      @include utils.check-nested-parent-state('.list-item', '.being-renamed') {
        @for $index from 0 through 3 {
          &:nth-of-type(#{4 - $index}) {
            transition-delay: $index * 50ms;
          }
        }

        &:not(.rename-icon) {
          opacity: 0;
        }
      }
    }
  }
}
